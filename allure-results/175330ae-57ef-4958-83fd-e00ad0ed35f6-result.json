{"name": "test_search_not_existing_product", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 10000ms exceeded.\nCall log:\n  - waiting for locator(\"h3.card__heading a, a[href*=\\\"/products/\\\"], h2.ProductItem__Title a, main .search__no-results, main .collection .title, main .search-results__empty, div.Segment__Content p\") to be visible", "trace": "self = <test_homepage.TestHeaderAndSearch object at 0x0000021B0F72DFD0>\nopen_search_input = (<Page url='https://theconnectedshop.com/search?q=adrakadabra&options%5Bprefix%5D=last'>, <Locator frame=<Frame name= url='https://theconnectedshop.com/search?q=adrakadabra&options%5Bprefix%5D=last'> selector='#Search-In-Inline >> nth=0'>)\n\n    @pytest.mark.search\n    @allure.feature(\"Search\")\n    @allure.story(\"Search not existing product\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_search_not_existing_product(self, open_search_input):\n        page, _ = open_search_input\n>       SearchPage(page).run_test_search_notexisting_product()\n\ntests\\test_homepage.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\search_page.py:97: in run_test_search_notexisting_product\n    message_text, input_value = self.search_invalid_product(search_text_invalid)\npages\\search_page.py:66: in search_invalid_product\n    mode = self._search(text)\npages\\search_page.py:44: in _search\n    self.page.wait_for_selector(\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:8181: in wait_for_selector\n    self._sync(\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_page.py:424: in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x0000021B0F682FF0>\ncb = <function Channel.send.<locals>.<lambda> at 0x0000021B0F6D6340>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 10000ms exceeded.\nE           Call log:\nE             - waiting for locator(\"h3.card__heading a, a[href*=\\\"/products/\\\"], h2.ProductItem__Title a, main .search__no-results, main .collection .title, main .search-results__empty, div.Segment__Content p\") to be visible\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TimeoutError"}, "start": 1755882124377, "stop": 1755882140114, "uuid": "7c51066f-6fd5-4523-942d-acdb8dea3e7d", "historyId": "569b5a0ee7a5a2e6039b74aebbf855fd", "testCaseId": "569b5a0ee7a5a2e6039b74aebbf855fd", "fullName": "tests.test_homepage.TestHeaderAndSearch#test_search_not_existing_product", "labels": [{"name": "severity", "value": "normal"}, {"name": "epic", "value": "TheConnectedShop Tests"}, {"name": "feature", "value": "Search"}, {"name": "story", "value": "Search not existing product"}, {"name": "tag", "value": "search"}, {"name": "tag", "value": "header"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_homepage"}, {"name": "subSuite", "value": "TestHeaderAndSearch"}, {"name": "host", "value": "DESKTOP-TPM9FFM"}, {"name": "thread", "value": "15944-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_homepage"}], "titlePath": ["tests", "test_homepage.py", "TestHeaderAndSearch"]}